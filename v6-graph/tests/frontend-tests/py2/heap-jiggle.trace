{"code": "# test whether heap objects \"jiggle\" between steps\nx = [1, [2, [3, None]]]\ny = [4, [5, [6, None]]]\n\nx[1][1] = y[1] # hopefully no jiggle!\n\nx = set(['apple', 'banana', 'carrot'])", "trace": [{"ordered_globals": [], "stdout": "", "func_name": "<module>", "stack_to_render": [], "globals": {}, "heap": {}, "line": 2, "event": "step_line"}, {"ordered_globals": ["x"], "stdout": "", "func_name": "<module>", "stack_to_render": [], "globals": {"x": ["REF", 1]}, "heap": {"1": ["LIST", 1, ["REF", 2]], "2": ["LIST", 2, ["REF", 3]], "3": ["LIST", 3, null]}, "line": 3, "event": "step_line"}, {"ordered_globals": ["x", "y"], "stdout": "", "func_name": "<module>", "stack_to_render": [], "globals": {"y": ["REF", 4], "x": ["REF", 1]}, "heap": {"1": ["LIST", 1, ["REF", 2]], "2": ["LIST", 2, ["REF", 3]], "3": ["LIST", 3, null], "4": ["LIST", 4, ["REF", 5]], "5": ["LIST", 5, ["REF", 6]], "6": ["LIST", 6, null]}, "line": 5, "event": "step_line"}, {"ordered_globals": ["x", "y"], "stdout": "", "func_name": "<module>", "stack_to_render": [], "globals": {"y": ["REF", 4], "x": ["REF", 1]}, "heap": {"1": ["LIST", 1, ["REF", 2]], "2": ["LIST", 2, ["REF", 5]], "4": ["LIST", 4, ["REF", 5]], "5": ["LIST", 5, ["REF", 6]], "6": ["LIST", 6, null]}, "line": 7, "event": "step_line"}, {"ordered_globals": ["x", "y"], "stdout": "", "func_name": "<module>", "stack_to_render": [], "globals": {"y": ["REF", 4], "x": ["REF", 7]}, "heap": {"4": ["LIST", 4, ["REF", 5]], "5": ["LIST", 5, ["REF", 6]], "6": ["LIST", 6, null], "7": ["SET", "carrot", "apple", "banana"]}, "line": 7, "event": "return"}]}