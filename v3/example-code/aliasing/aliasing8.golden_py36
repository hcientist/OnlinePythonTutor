{
  "code": "# test whether heap objects \"jiggle\" between steps\nx = [1, [2, [3, None]]]\ny = [4, [5, [6, None]]]\n\nx[1][1] = y[1] # hopefully no jiggle!\n\nx = set(['apple', 'banana', 'carrot'])\n\n",
  "trace": [
    {
      "line": 2,
      "event": "step_line",
      "func_name": "<module>",
      "globals": {},
      "ordered_globals": [],
      "stack_to_render": [],
      "heap": {},
      "stdout": ""
    },
    {
      "line": 3,
      "event": "step_line",
      "func_name": "<module>",
      "globals": {
        "x": [
          "REF",
          1
        ]
      },
      "ordered_globals": [
        "x"
      ],
      "stack_to_render": [],
      "heap": {
        "1": [
          "LIST",
          1,
          [
            "REF",
            2
          ]
        ],
        "2": [
          "LIST",
          2,
          [
            "REF",
            3
          ]
        ],
        "3": [
          "LIST",
          3,
          null
        ]
      },
      "stdout": ""
    },
    {
      "line": 5,
      "event": "step_line",
      "func_name": "<module>",
      "globals": {
        "x": [
          "REF",
          1
        ],
        "y": [
          "REF",
          4
        ]
      },
      "ordered_globals": [
        "x",
        "y"
      ],
      "stack_to_render": [],
      "heap": {
        "1": [
          "LIST",
          1,
          [
            "REF",
            2
          ]
        ],
        "2": [
          "LIST",
          2,
          [
            "REF",
            3
          ]
        ],
        "3": [
          "LIST",
          3,
          null
        ],
        "4": [
          "LIST",
          4,
          [
            "REF",
            5
          ]
        ],
        "5": [
          "LIST",
          5,
          [
            "REF",
            6
          ]
        ],
        "6": [
          "LIST",
          6,
          null
        ]
      },
      "stdout": ""
    },
    {
      "line": 7,
      "event": "step_line",
      "func_name": "<module>",
      "globals": {
        "x": [
          "REF",
          1
        ],
        "y": [
          "REF",
          4
        ]
      },
      "ordered_globals": [
        "x",
        "y"
      ],
      "stack_to_render": [],
      "heap": {
        "1": [
          "LIST",
          1,
          [
            "REF",
            2
          ]
        ],
        "2": [
          "LIST",
          2,
          [
            "REF",
            5
          ]
        ],
        "5": [
          "LIST",
          5,
          [
            "REF",
            6
          ]
        ],
        "6": [
          "LIST",
          6,
          null
        ],
        "4": [
          "LIST",
          4,
          [
            "REF",
            5
          ]
        ]
      },
      "stdout": ""
    },
    {
      "line": 7,
      "event": "return",
      "func_name": "<module>",
      "globals": {
        "x": [
          "REF",
          7
        ],
        "y": [
          "REF",
          4
        ]
      },
      "ordered_globals": [
        "x",
        "y"
      ],
      "stack_to_render": [],
      "heap": {
        "7": [
          "SET",
          "apple",
          "banana",
          "carrot"
        ],
        "4": [
          "LIST",
          4,
          [
            "REF",
            5
          ]
        ],
        "5": [
          "LIST",
          5,
          [
            "REF",
            6
          ]
        ],
        "6": [
          "LIST",
          6,
          null
        ]
      },
      "stdout": ""
    }
  ]
}
