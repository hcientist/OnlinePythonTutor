{ code: 'var size = 8;\n\nvar board = "";\n\nfor (var y = 0; y < size; y++) {\n  for (var x = 0; x < size; x++) {\n    if ((x + y) % 2 == 0)\n      board += " ";\n    else\n      board += "#";\n  }\n  board += "\\n";\n}\n\nconsole.log(board);',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: [ 'JS_SPECIAL_VAL', 'undefined' ],
          board: [ 'JS_SPECIAL_VAL', 'undefined' ],
          y: [ 'JS_SPECIAL_VAL', 'undefined' ],
          x: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 1,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: [ 'JS_SPECIAL_VAL', 'undefined' ],
          y: [ 'JS_SPECIAL_VAL', 'undefined' ],
          x: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 3,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: '',
          y: [ 'JS_SPECIAL_VAL', 'undefined' ],
          x: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 5,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: '', y: 0, x: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: '', y: 0, x: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 7,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: '', y: 0, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: '', y: 0, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: '', y: 0, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' ', y: 0, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' ', y: 0, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' ', y: 0, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' ', y: 0, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' #', y: 0, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' #', y: 0, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' #', y: 0, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' #', y: 0, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # ', y: 0, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # ', y: 0, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # ', y: 0, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # ', y: 0, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # #', y: 0, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # #', y: 0, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # #', y: 0, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # #', y: 0, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # ', y: 0, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # ', y: 0, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # ', y: 0, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # ', y: 0, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # #', y: 0, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # #', y: 0, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # #', y: 0, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # #', y: 0, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # ', y: 0, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # ', y: 0, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # ', y: 0, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # ', y: 0, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #', y: 0, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #', y: 0, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #', y: 0, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 12,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n', y: 0, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n', y: 1, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n', y: 1, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 7,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n', y: 1, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n', y: 1, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n', y: 1, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n#', y: 1, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n#', y: 1, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n#', y: 1, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n#', y: 1, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# ', y: 1, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# ', y: 1, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# ', y: 1, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# ', y: 1, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# #', y: 1, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# #', y: 1, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# #', y: 1, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# #', y: 1, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # ', y: 1, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # ', y: 1, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # ', y: 1, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # ', y: 1, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # #', y: 1, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # #', y: 1, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # #', y: 1, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # #', y: 1, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # ', y: 1, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # ', y: 1, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # ', y: 1, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # ', y: 1, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # #', y: 1, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # #', y: 1, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # #', y: 1, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # #', y: 1, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # ', y: 1, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # ', y: 1, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # ', y: 1, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 12,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n', y: 1, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n', y: 2, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n', y: 2, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 7,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n', y: 2, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n', y: 2, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n', y: 2, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n ', y: 2, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n ', y: 2, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n ', y: 2, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n ', y: 2, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n #', y: 2, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n #', y: 2, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n #', y: 2, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n #', y: 2, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # ', y: 2, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # ', y: 2, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # ', y: 2, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # ', y: 2, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # #', y: 2, x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # #', y: 2, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # #', y: 2, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # #', y: 2, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # ', y: 2, x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # ', y: 2, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # ', y: 2, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # ', y: 2, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # #', y: 2, x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # #', y: 2, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # #', y: 2, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # #', y: 2, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # ', y: 2, x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # ', y: 2, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # ', y: 2, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # ', y: 2, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #', y: 2, x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #', y: 2, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #', y: 2, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 12,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n', y: 2, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n', y: 3, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n', y: 3, x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 7,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n', y: 3, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n', y: 3, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n', y: 3, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n#', y: 3, x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n#', y: 3, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n#', y: 3, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n#', y: 3, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n# ', y: 3, x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n# ', y: 3, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n# ', y: 3, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { size: 8, board: ' # # # #\n# # # # \n # # # #\n# ', y: 3, x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# #',
          y: 3,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# #',
          y: 3,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# #',
          y: 3,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# #',
          y: 3,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # ',
          y: 3,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # ',
          y: 3,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # ',
          y: 3,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # ',
          y: 3,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # #',
          y: 3,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # #',
          y: 3,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # #',
          y: 3,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # #',
          y: 3,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # ',
          y: 3,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # ',
          y: 3,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # ',
          y: 3,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # ',
          y: 3,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # #',
          y: 3,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # #',
          y: 3,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # #',
          y: 3,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # #',
          y: 3,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # ',
          y: 3,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # ',
          y: 3,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # ',
          y: 3,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 12,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 3,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 4,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 4,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 7,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 4,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 4,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 4,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n ',
          y: 4,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n ',
          y: 4,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n ',
          y: 4,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n ',
          y: 4,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n #',
          y: 4,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n #',
          y: 4,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n #',
          y: 4,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n #',
          y: 4,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # ',
          y: 4,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # ',
          y: 4,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # ',
          y: 4,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # ',
          y: 4,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # #',
          y: 4,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # #',
          y: 4,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # #',
          y: 4,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # #',
          y: 4,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # ',
          y: 4,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # ',
          y: 4,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # ',
          y: 4,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # ',
          y: 4,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # #',
          y: 4,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # #',
          y: 4,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # #',
          y: 4,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # #',
          y: 4,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # ',
          y: 4,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # ',
          y: 4,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # ',
          y: 4,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # ',
          y: 4,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #',
          y: 4,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #',
          y: 4,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #',
          y: 4,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 12,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 4,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 5,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 5,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 7,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 5,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 5,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 5,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n#',
          y: 5,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n#',
          y: 5,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n#',
          y: 5,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n#',
          y: 5,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# ',
          y: 5,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# ',
          y: 5,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# ',
          y: 5,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# ',
          y: 5,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# #',
          y: 5,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# #',
          y: 5,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# #',
          y: 5,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# #',
          y: 5,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # ',
          y: 5,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # ',
          y: 5,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # ',
          y: 5,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # ',
          y: 5,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # #',
          y: 5,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # #',
          y: 5,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # #',
          y: 5,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # #',
          y: 5,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # ',
          y: 5,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # ',
          y: 5,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # ',
          y: 5,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # ',
          y: 5,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # #',
          y: 5,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # #',
          y: 5,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # #',
          y: 5,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # #',
          y: 5,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # ',
          y: 5,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # ',
          y: 5,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # ',
          y: 5,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 12,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 5,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 6,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 6,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 7,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 6,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 6,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 6,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n ',
          y: 6,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n ',
          y: 6,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n ',
          y: 6,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n ',
          y: 6,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n #',
          y: 6,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n #',
          y: 6,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n #',
          y: 6,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n #',
          y: 6,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # ',
          y: 6,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # ',
          y: 6,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # ',
          y: 6,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # ',
          y: 6,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # #',
          y: 6,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # #',
          y: 6,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # #',
          y: 6,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # #',
          y: 6,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # ',
          y: 6,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # ',
          y: 6,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # ',
          y: 6,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # ',
          y: 6,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # #',
          y: 6,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # #',
          y: 6,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # #',
          y: 6,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # #',
          y: 6,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # ',
          y: 6,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # ',
          y: 6,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # ',
          y: 6,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # ',
          y: 6,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #',
          y: 6,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #',
          y: 6,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #',
          y: 6,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 12,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 6,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 7,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 7,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 7,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 7,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 7,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n',
          y: 7,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n#',
          y: 7,
          x: 0 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n#',
          y: 7,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n#',
          y: 7,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n#',
          y: 7,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# ',
          y: 7,
          x: 1 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# ',
          y: 7,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# ',
          y: 7,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# ',
          y: 7,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# #',
          y: 7,
          x: 2 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# #',
          y: 7,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# #',
          y: 7,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# #',
          y: 7,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # ',
          y: 7,
          x: 3 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # ',
          y: 7,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # ',
          y: 7,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # ',
          y: 7,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # #',
          y: 7,
          x: 4 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # #',
          y: 7,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # #',
          y: 7,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # #',
          y: 7,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # ',
          y: 7,
          x: 5 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # ',
          y: 7,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # ',
          y: 7,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # ',
          y: 7,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # #',
          y: 7,
          x: 6 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # #',
          y: 7,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # #',
          y: 7,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # #',
          y: 7,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # ',
          y: 7,
          x: 7 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 29,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # ',
          y: 7,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 6,
       col: 20,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # ',
          y: 7,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 12,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 7,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 27,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 8,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 5,
       col: 18,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 8,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 15,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { size: 8,
          board: ' # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n # # # #\n# # # # \n',
          y: 8,
          x: 8 },
       ordered_globals: [ 'size', 'board', 'y', 'x' ],
       line: 15,
       col: 19,
       event: 'step_line',
       heap: {} } ] }
