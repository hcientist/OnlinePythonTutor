{ code: 'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}\n\nfunction bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}\n\n\nlet xxx = 1;\nconsole.log(xxx);\nif (true) {\n  let xxx = 2;\n  console.log(xxx);\n  if (true) {\n    let xxx = 3;\n    console.log(xxx);\n    if (true) {\n      let xxx = 4;\n      console.log(xxx);\n      foo();\n    }\n  }\n}\nconsole.log(xxx);',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ] },
       ordered_globals: [ 'foo', 'bar' ],
       line: 37,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 38,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 39,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'foo', 'bar', 'xxx', 'xxx (block 1)' ],
       line: 40,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': 2 },
       ordered_globals: [ 'foo', 'bar', 'xxx', 'xxx (block 1)' ],
       line: 41,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': 2 },
       ordered_globals: [ 'foo', 'bar', 'xxx', 'xxx (block 1)' ],
       line: 42,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': 2,
          'xxx (block 2)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'foo', 'bar', 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
       line: 43,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': 2,
          'xxx (block 2)': 3 },
       ordered_globals: [ 'foo', 'bar', 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
       line: 44,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': 2,
          'xxx (block 2)': 3 },
       ordered_globals: [ 'foo', 'bar', 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
       line: 45,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': 2,
          'xxx (block 2)': 3,
          'xxx (block 3)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: 
        [ 'foo',
          'bar',
          'xxx',
          'xxx (block 1)',
          'xxx (block 2)',
          'xxx (block 3)' ],
       line: 46,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': 2,
          'xxx (block 2)': 3,
          'xxx (block 3)': 4 },
       ordered_globals: 
        [ 'foo',
          'bar',
          'xxx',
          'xxx (block 1)',
          'xxx (block 2)',
          'xxx (block 3)' ],
       line: 47,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n',
       func_name: '',
       stack_to_render: [],
       globals: 
        { foo: [ 'REF', 1 ],
          bar: [ 'REF', 2 ],
          xxx: 1,
          'xxx (block 1)': 2,
          'xxx (block 2)': 3,
          'xxx (block 3)': 4 },
       ordered_globals: 
        [ 'foo',
          'bar',
          'xxx',
          'xxx (block 1)',
          'xxx (block 2)',
          'xxx (block 3)' ],
       line: 48,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 2,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: 5 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 3,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: 5 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 4,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 5,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': 6 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': 6 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': 6, 'xxx (block 2)': 7 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 9,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': 6, 'xxx (block 2)': 7 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 10,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 11,
       col: 8,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 12,
       col: 8,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 13,
       col: 8,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 20,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: 9 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 21,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: 9 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 22,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 9, 'xxx (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 23,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 9, 'xxx (block 1)': 10 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 24,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 9, 'xxx (block 1)': 10 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 25,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: 
             { xxx: 9,
               'xxx (block 1)': 10,
               'xxx (block 2)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 26,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: { xxx: 9, 'xxx (block 1)': 10, 'xxx (block 2)': 11 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 27,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: { xxx: 9, 'xxx (block 1)': 10, 'xxx (block 2)': 11 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 28,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 9,
               'xxx (block 1)': 10,
               'xxx (block 2)': 11,
               'xxx (block 3)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 29,
       col: 8,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 9,
               'xxx (block 1)': 10,
               'xxx (block 2)': 11,
               'xxx (block 3)': 12 } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 30,
       col: 8,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 6,
               'xxx (block 2)': 7,
               'xxx (block 3)': 8 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'xxx', '__return__' ],
            encoded_locals: { xxx: 9, __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 30,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', '__return__' ],
            encoded_locals: { xxx: 5, __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 17,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 52,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } },
     { stdout: '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n1\n',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ], bar: [ 'REF', 2 ], xxx: 1 },
       ordered_globals: [ 'foo', 'bar', 'xxx' ],
       line: 52,
       col: 17,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var xxx = 5;\n  console.log(xxx);\n  if (true) {\n    let xxx = 6;\n    console.log(xxx);\n    if (true) {\n      let xxx = 7;\n      console.log(xxx);\n      if (true) {\n        let xxx = 8;\n        console.log(xxx);\n        bar();\n      }\n    }\n  }\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             'function bar() {\n  var xxx = 9;\n  console.log(xxx);\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 11;\n      console.log(xxx);\n      if (true) {\n        let xxx = 12;\n        console.log(xxx);\n      }\n    }\n  }\n}',
             null,
             null ] } } ] }
