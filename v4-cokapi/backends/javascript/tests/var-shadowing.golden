{ code: 'var x = 10; // global\nfunction foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}\nfoo();',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { x: [ 'JS_SPECIAL_VAL', 'undefined' ], foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 1,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 11,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'x' ],
            encoded_locals: { bar: [ 'REF', 2 ], x: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 3,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'x' ],
            encoded_locals: { bar: [ 'REF', 2 ], x: 10 } } ],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 9,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }',
             null,
             null ] } },
     { stdout: '',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'x' ],
            encoded_locals: { bar: [ 'REF', 2 ], x: 10 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'parent:x', 'y' ],
            encoded_locals: { 'parent:x': 10, y: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 5,
       col: 4,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }',
             null,
             null ] } },
     { stdout: '',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'x' ],
            encoded_locals: { bar: [ 'REF', 2 ], x: 10 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'parent:x', 'y' ],
            encoded_locals: { 'parent:x': 10, y: 10 } } ],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }',
             null,
             null ] } },
     { stdout: '',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'x' ],
            encoded_locals: { bar: [ 'REF', 2 ], x: 20 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'parent:x', 'y' ],
            encoded_locals: { 'parent:x': 20, y: 10 } } ],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }',
             null,
             null ] } },
     { stdout: '20 10\n',
       func_name: 'bar',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: false,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'x' ],
            encoded_locals: { bar: [ 'REF', 2 ], x: 20 } },
          { func_name: 'bar',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'bar_f3',
            ordered_varnames: [ 'parent:x', 'y', '__return__' ],
            encoded_locals: 
             { 'parent:x': 20,
               y: 10,
               __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 7,
       col: 2,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }',
             null,
             null ] } },
     { stdout: '20 10\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'x', '__return__' ],
            encoded_locals: 
             { bar: [ 'REF', 2 ],
               x: 20,
               __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 10,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }',
             null,
             null ] } },
     { stdout: '20 10\n',
       func_name: '',
       stack_to_render: [],
       globals: { x: 10, foo: [ 'REF', 1 ] },
       ordered_globals: [ 'x', 'foo' ],
       line: 11,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  var x = 10;\n  function bar() {\n    var y = x;\n    x *= 2;\n    console.log(x, y);\n  }\n  bar();\n}',
             null,
             null ] } } ] }
