{ code: 'function foo(a, b, c) {\n  console.log(a, b, c);\n}\n\nfoo(1, 2);',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(a, b, c) {\n  console.log(a, b, c);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'a', 'b', 'c' ],
            encoded_locals: { a: 1, b: 2, c: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 2,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(a, b, c) {\n  console.log(a, b, c);\n}',
             null,
             null ] } },
     { stdout: '1 2 undefined\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'a', 'b', 'c', '__return__' ],
            encoded_locals: 
             { a: 1,
               b: 2,
               c: [ 'JS_SPECIAL_VAL', 'undefined' ],
               __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 2,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(a, b, c) {\n  console.log(a, b, c);\n}',
             null,
             null ] } },
     { stdout: '1 2 undefined\n',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 10,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(a, b, c) {\n  console.log(a, b, c);\n}',
             null,
             null ] } } ] }
