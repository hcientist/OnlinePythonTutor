{ code: 'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}\n\nfoo(10);\nfoo(-10);',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 13,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'i' ],
            encoded_locals: { i: 10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 3,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'i' ],
            encoded_locals: { i: 10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 4,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'i', '__return__' ],
            encoded_locals: { i: 10, __return__: 10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 4,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 14,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f3',
            ordered_varnames: [ 'i' ],
            encoded_locals: { i: -10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 3,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f3',
            ordered_varnames: [ 'i' ],
            encoded_locals: { i: -10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 7,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f3',
            ordered_varnames: [ 'i', '__return__' ],
            encoded_locals: { i: -10, __return__: 10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 7,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 14,
       col: 9,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(i) {\n\n  if (i > 0) {\n    return i;\n\n  } else {\n    return -1 * i;\n\n  }\n\n}',
             null,
             null ] } } ] }
