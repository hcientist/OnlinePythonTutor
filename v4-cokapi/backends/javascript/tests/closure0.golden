{ code: 'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}\n\nfoo(10);\nfoo(20);\nfoo(30);',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 8,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'y' ],
            encoded_locals: { bar: [ 'REF', 2 ], y: 10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 4,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '    function bar(x) {\n        return x + y;\n    }',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'bar', 'y', '__return__' ],
            encoded_locals: 
             { bar: [ 'REF', 2 ],
               y: 30,
               __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ],
          '2': 
           [ 'JS_FUNCTION',
             'bar',
             '    function bar(x) {\n        return x + y;\n    }',
             null,
             null ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 9,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f3',
            ordered_varnames: [ 'bar', 'y' ],
            encoded_locals: { bar: [ 'REF', 3 ], y: 20 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 4,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ],
          '3': 
           [ 'JS_FUNCTION',
             'bar',
             '    function bar(x) {\n        return x + y;\n    }',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 3,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f3',
            ordered_varnames: [ 'bar', 'y', '__return__' ],
            encoded_locals: 
             { bar: [ 'REF', 3 ],
               y: 60,
               __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ],
          '3': 
           [ 'JS_FUNCTION',
             'bar',
             '    function bar(x) {\n        return x + y;\n    }',
             null,
             null ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 10,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 4,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f4',
            ordered_varnames: [ 'bar', 'y' ],
            encoded_locals: { bar: [ 'REF', 4 ], y: 30 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 4,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ],
          '4': 
           [ 'JS_FUNCTION',
             'bar',
             '    function bar(x) {\n        return x + y;\n    }',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 4,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f4',
            ordered_varnames: [ 'bar', 'y', '__return__' ],
            encoded_locals: 
             { bar: [ 'REF', 4 ],
               y: 90,
               __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ],
          '4': 
           [ 'JS_FUNCTION',
             'bar',
             '    function bar(x) {\n        return x + y;\n    }',
             null,
             null ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 10,
       col: 8,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo(y) {\n    function bar(x) {\n        return x + y;\n    }\n    y *= 3;\n}',
             null,
             null ] } } ] }
