{ code: 'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}\n\nfoo()',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 18,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 2,
       col: 2,
       event: 'call',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: 5 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 3,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 4,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': 10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 5,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': 10 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 6,
       col: 4,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 10,
               'xxx (block 2)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 7,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': 10, 'xxx (block 2)': 20 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 8,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n20\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)' ],
            encoded_locals: { xxx: 5, 'xxx (block 1)': 10, 'xxx (block 2)': 20 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 9,
       col: 6,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n20\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 10,
               'xxx (block 2)': 20,
               'xxx (block 3)': [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 10,
       col: 8,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n20\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', 'xxx (block 1)', 'xxx (block 2)', 'xxx (block 3)' ],
            encoded_locals: 
             { xxx: 5,
               'xxx (block 1)': 10,
               'xxx (block 2)': 20,
               'xxx (block 3)': 30 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 11,
       col: 8,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n20\n30\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx' ],
            encoded_locals: { xxx: 5 } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 15,
       col: 2,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n20\n30\n5\n',
       func_name: 'foo',
       stack_to_render: 
        [ { func_name: 'foo',
            frame_id: 2,
            is_highlighted: true,
            is_parent: false,
            is_zombie: false,
            parent_frame_id_list: [],
            unique_hash: 'foo_f2',
            ordered_varnames: [ 'xxx', '__return__' ],
            encoded_locals: { xxx: 5, __return__: [ 'JS_SPECIAL_VAL', 'undefined' ] } } ],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 15,
       col: 0,
       event: 'return',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } },
     { stdout: '10\n20\n30\n5\n',
       func_name: '',
       stack_to_render: [],
       globals: { foo: [ 'REF', 1 ] },
       ordered_globals: [ 'foo' ],
       line: 18,
       col: 5,
       event: 'step_line',
       heap: 
        { '1': 
           [ 'JS_FUNCTION',
             'foo',
             'function foo() {\n  let xxx = 5;\n  if (true) {\n    let xxx = 10;\n    console.log(xxx);\n    if (true) {\n      let xxx = 20;\n      console.log(xxx);\n      if (true) {\n        let xxx = 30;\n        console.log(xxx);\n      }\n    }\n  }\n  console.log(xxx);\n}',
             null,
             null ] } } ] }
