{ code: 'var a = 5;\nvar b = 10;\n\nif (a === 5) {\n  let a = 4; // The scope is inside the if-block\n  var b = 1; // The scope is inside the function\n\n  console.log(a);  // 4\n  console.log(b);  // 1\n} \n\nconsole.log(a); // 5\nconsole.log(b); // 1',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { a: [ 'JS_SPECIAL_VAL', 'undefined' ],
          b: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'a', 'b' ],
       line: 1,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'a', 'b' ],
       line: 2,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: 10 },
       ordered_globals: [ 'a', 'b' ],
       line: 4,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: 10, 'a (block 1)': [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'a', 'b', 'a (block 1)' ],
       line: 5,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: 10, 'a (block 1)': 4 },
       ordered_globals: [ 'a', 'b', 'a (block 1)' ],
       line: 6,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: 1, 'a (block 1)': 4 },
       ordered_globals: [ 'a', 'b', 'a (block 1)' ],
       line: 8,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '4\n',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: 1, 'a (block 1)': 4 },
       ordered_globals: [ 'a', 'b', 'a (block 1)' ],
       line: 9,
       col: 2,
       event: 'step_line',
       heap: {} },
     { stdout: '4\n1\n',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: 1 },
       ordered_globals: [ 'a', 'b' ],
       line: 12,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '4\n1\n5\n',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: 1 },
       ordered_globals: [ 'a', 'b' ],
       line: 13,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '4\n1\n5\n1\n',
       func_name: '',
       stack_to_render: [],
       globals: { a: 5, b: 1 },
       ordered_globals: [ 'a', 'b' ],
       line: 13,
       col: 20,
       event: 'step_line',
       heap: {} } ] }
