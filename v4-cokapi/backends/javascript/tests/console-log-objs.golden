{ code: 'var x = [1,2,3,4,5];\nvar y = {joe: 1, jane: 3};\nconsole.log(x);\nconsole.log(y);',
  trace: 
   [ { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: 
        { x: [ 'JS_SPECIAL_VAL', 'undefined' ],
          y: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'x', 'y' ],
       line: 1,
       col: 0,
       event: 'step_line',
       heap: {} },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { x: [ 'REF', 1 ], y: [ 'JS_SPECIAL_VAL', 'undefined' ] },
       ordered_globals: [ 'x', 'y' ],
       line: 2,
       col: 0,
       event: 'step_line',
       heap: { '1': [ 'LIST', 1, 2, 3, 4, 5 ] } },
     { stdout: '',
       func_name: '',
       stack_to_render: [],
       globals: { x: [ 'REF', 1 ], y: [ 'REF', 2 ] },
       ordered_globals: [ 'x', 'y' ],
       line: 3,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': [ 'LIST', 1, 2, 3, 4, 5 ],
          '2': [ 'INSTANCE', '', [ 'joe', 1 ], [ 'jane', 3 ] ] } },
     { stdout: '[ 1, 2, 3, 4, 5 ]\n',
       func_name: '',
       stack_to_render: [],
       globals: { x: [ 'REF', 1 ], y: [ 'REF', 2 ] },
       ordered_globals: [ 'x', 'y' ],
       line: 4,
       col: 0,
       event: 'step_line',
       heap: 
        { '1': [ 'LIST', 1, 2, 3, 4, 5 ],
          '2': [ 'INSTANCE', '', [ 'joe', 1 ], [ 'jane', 3 ] ] } },
     { stdout: '[ 1, 2, 3, 4, 5 ]\n{ joe: 1, jane: 3 }\n',
       func_name: '',
       stack_to_render: [],
       globals: { x: [ 'REF', 1 ], y: [ 'REF', 2 ] },
       ordered_globals: [ 'x', 'y' ],
       line: 4,
       col: 15,
       event: 'step_line',
       heap: 
        { '1': [ 'LIST', 1, 2, 3, 4, 5 ],
          '2': [ 'INSTANCE', '', [ 'joe', 1 ], [ 'jane', 3 ] ] } } ] }
